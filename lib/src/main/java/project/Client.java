/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package project;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.http.HttpClient;
import java.net.http.HttpHeaders;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpRequest.BodyPublishers;
import java.net.http.HttpResponse.BodyHandlers;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import org.apache.http.NameValuePair;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.message.BasicNameValuePair;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@NoArgsConstructor
@Getter @Setter
public class Client {
    private URI uri;
    private HttpHeaders headers;
    private String apiUrl; 
    
    private HttpRequest getLoanRequest(Loan loan) throws URISyntaxException {
        List<NameValuePair> nameValuePairs = new ArrayList<>();
        nameValuePairs.add(new BasicNameValuePair(Loan.Fields.amount, loan.getAmount()+""));
        nameValuePairs.add(new BasicNameValuePair(Loan.Fields.interestRate, loan.getInterestRate()+""));
        nameValuePairs.add(new BasicNameValuePair(Loan.Fields.monthlyPayment, loan.getMonthlyPayment()+""));
        nameValuePairs.add(new BasicNameValuePair(Loan.Fields.loanLength, loan.getLoanLength()+"")); 
        //Get uri from a configuration file in the future
        HttpGet httpGet = new HttpGet(getApiUrl());
            uri = new URIBuilder(httpGet.getURI())
                .addParameters(nameValuePairs)
                .build();
        return HttpRequest
            .newBuilder()
            .uri(uri)
            .GET()
            .build();
    }

    private HttpResponse<String> makeGetLoanRequest(Loan loan) throws IOException, InterruptedException, URISyntaxException {
        return HttpClient
            .newBuilder()
            .build()
            .send(getLoanRequest(loan), 
                BodyHandlers.ofString());
    }

    private HttpRequest createLoanRequest(String body) throws URISyntaxException {
        return HttpRequest
            .newBuilder()
            .uri(new URI(apiUrl))
            .header("Content-Type", "application/json")
            .POST(BodyPublishers.ofString(body))
            .build();
    }
    
    private HttpResponse<String> makeCreateLoanRequet(String body) throws IOException, InterruptedException, URISyntaxException {
        return HttpClient
        .newBuilder()
        .build()
        .send(createLoanRequest(body), 
        BodyHandlers.ofString());
    }
    
    private HttpRequest modifyLoanRequest(String body) throws URISyntaxException {
        return HttpRequest
            .newBuilder()
            .uri(new URI(apiUrl))
            .header("Content-Type", "application/json")
            .PUT(BodyPublishers.ofString(body))
            .build();
    }

    private HttpResponse<String> makeModifyLoanRequet(String body) throws IOException, InterruptedException, URISyntaxException {
        return HttpClient
            .newBuilder()
            .build()
            .send(modifyLoanRequest(body), 
                BodyHandlers.ofString());
    }
    public static void main(String[] args) {
        System.out.println("Client Running...");

        Loan loan = Loan.builder()
            .amount(23000)
            .interestRate(0.051)
            .monthlyPayment(300)
            .loanLength(7)
            .build();
        Gson gson = new GsonBuilder().create();
        String body = gson.toJson(loan);
        
        Client loanStreetClient = new Client();
        //Get from environment variable in the future.
        loanStreetClient.setApiUrl("https://og7ge4yn26.execute-api.us-east-2.amazonaws.com/DEV/loans");

        try {
            //Create Loan
            HttpResponse<String> createLoanResponse = loanStreetClient.makeCreateLoanRequet(body);
            System.out.println("loan create response " + createLoanResponse.body());

            //Get previously created loan using the same parameters
            HttpResponse<String> getPreviouslyCreatedLoanResponse = loanStreetClient.makeGetLoanRequest(loan);
            System.out.println("get previously created loan response " + getPreviouslyCreatedLoanResponse.body());
            loan = gson.fromJson(getPreviouslyCreatedLoanResponse.body(), Loan.class);

            //Modify previously created loan using loanId that was obtained during creation or GET request
            loan.setAmount(loan.getAmount() + 1000);
            loan.setInterestRate(loan.getInterestRate() * 2);
            loan.setMonthlyPayment(loan.getMonthlyPayment() / 2);
            loan.setLoanLength(loan.getLoanLength() - 2);
            body = gson.toJson(loan);
            HttpResponse<String> modifyExistingLoanResponse = loanStreetClient.makeModifyLoanRequet(body);
            System.out.println("modified previously created loan response " + modifyExistingLoanResponse.body());

        } catch (URISyntaxException e) {
            System.err.println("URI Exception: " + e);
        } catch (IOException e) {
            System.err.println("IO Exception: " + e);
        } catch (InterruptedException e) {
            System.err.println("InterruptedException: " + e);
        }
    }
}
